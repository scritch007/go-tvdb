// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SeriesEpisodesSummary series episodes summary
// swagger:model SeriesEpisodesSummary

type SeriesEpisodesSummary struct {

	// Number of all aired episodes for this series
	AiredEpisodes string `json:"airedEpisodes,omitempty"`

	// aired seasons
	AiredSeasons []string `json:"airedSeasons"`

	// Number of all dvd episodes for this series
	DvdEpisodes string `json:"dvdEpisodes,omitempty"`

	// dvd seasons
	DvdSeasons []string `json:"dvdSeasons"`
}

/* polymorph SeriesEpisodesSummary airedEpisodes false */

/* polymorph SeriesEpisodesSummary airedSeasons false */

/* polymorph SeriesEpisodesSummary dvdEpisodes false */

/* polymorph SeriesEpisodesSummary dvdSeasons false */

// Validate validates this series episodes summary
func (m *SeriesEpisodesSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAiredSeasons(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDvdSeasons(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SeriesEpisodesSummary) validateAiredSeasons(formats strfmt.Registry) error {

	if swag.IsZero(m.AiredSeasons) { // not required
		return nil
	}

	return nil
}

func (m *SeriesEpisodesSummary) validateDvdSeasons(formats strfmt.Registry) error {

	if swag.IsZero(m.DvdSeasons) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SeriesEpisodesSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SeriesEpisodesSummary) UnmarshalBinary(b []byte) error {
	var res SeriesEpisodesSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
