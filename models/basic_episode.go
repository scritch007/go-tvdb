// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BasicEpisode basic episode
// swagger:model BasicEpisode

type BasicEpisode struct {

	// absolute number
	AbsoluteNumber int64 `json:"absoluteNumber,omitempty"`

	// aired episode number
	AiredEpisodeNumber int64 `json:"airedEpisodeNumber,omitempty"`

	// aired season
	AiredSeason int64 `json:"airedSeason,omitempty"`

	// dvd episode number
	DvdEpisodeNumber float64 `json:"dvdEpisodeNumber,omitempty"`

	// dvd season
	DvdSeason int64 `json:"dvdSeason,omitempty"`

	// episode name
	EpisodeName string `json:"episodeName,omitempty"`

	// first aired
	FirstAired string `json:"firstAired,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// last updated
	LastUpdated int64 `json:"lastUpdated,omitempty"`

	// overview
	Overview string `json:"overview,omitempty"`
}

/* polymorph BasicEpisode absoluteNumber false */

/* polymorph BasicEpisode airedEpisodeNumber false */

/* polymorph BasicEpisode airedSeason false */

/* polymorph BasicEpisode dvdEpisodeNumber false */

/* polymorph BasicEpisode dvdSeason false */

/* polymorph BasicEpisode episodeName false */

/* polymorph BasicEpisode firstAired false */

/* polymorph BasicEpisode id false */

/* polymorph BasicEpisode lastUpdated false */

/* polymorph BasicEpisode overview false */

// Validate validates this basic episode
func (m *BasicEpisode) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *BasicEpisode) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BasicEpisode) UnmarshalBinary(b []byte) error {
	var res BasicEpisode
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
