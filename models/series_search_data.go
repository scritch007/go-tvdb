// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SeriesSearchData series search data
// swagger:model SeriesSearchData

type SeriesSearchData struct {

	// aliases
	Aliases []string `json:"aliases"`

	// banner
	Banner string `json:"banner,omitempty"`

	// first aired
	FirstAired string `json:"firstAired,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// network
	Network string `json:"network,omitempty"`

	// overview
	Overview string `json:"overview,omitempty"`

	// series name
	SeriesName string `json:"seriesName,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

/* polymorph SeriesSearchData aliases false */

/* polymorph SeriesSearchData banner false */

/* polymorph SeriesSearchData firstAired false */

/* polymorph SeriesSearchData id false */

/* polymorph SeriesSearchData network false */

/* polymorph SeriesSearchData overview false */

/* polymorph SeriesSearchData seriesName false */

/* polymorph SeriesSearchData status false */

// Validate validates this series search data
func (m *SeriesSearchData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAliases(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SeriesSearchData) validateAliases(formats strfmt.Registry) error {

	if swag.IsZero(m.Aliases) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SeriesSearchData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SeriesSearchData) UnmarshalBinary(b []byte) error {
	var res SeriesSearchData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
