// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Series series
// swagger:model Series

type Series struct {

	// added
	Added string `json:"added,omitempty"`

	// airs day of week
	AirsDayOfWeek string `json:"airsDayOfWeek,omitempty"`

	// airs time
	AirsTime string `json:"airsTime,omitempty"`

	// aliases
	Aliases []string `json:"aliases"`

	// banner
	Banner string `json:"banner,omitempty"`

	// first aired
	FirstAired string `json:"firstAired,omitempty"`

	// genre
	Genre []string `json:"genre"`

	// id
	ID int64 `json:"id,omitempty"`

	// imdb Id
	ImdbID string `json:"imdbId,omitempty"`

	// last updated
	LastUpdated int64 `json:"lastUpdated,omitempty"`

	// network
	Network string `json:"network,omitempty"`

	// network Id
	NetworkID string `json:"networkId,omitempty"`

	// overview
	Overview string `json:"overview,omitempty"`

	// rating
	Rating string `json:"rating,omitempty"`

	// runtime
	Runtime string `json:"runtime,omitempty"`

	// series Id
	SeriesID int64 `json:"seriesId,omitempty"`

	// series name
	SeriesName string `json:"seriesName,omitempty"`

	// site rating
	SiteRating float64 `json:"siteRating,omitempty"`

	// site rating count
	SiteRatingCount int64 `json:"siteRatingCount,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// zap2it Id
	Zap2itID string `json:"zap2itId,omitempty"`
}

/* polymorph Series added false */

/* polymorph Series airsDayOfWeek false */

/* polymorph Series airsTime false */

/* polymorph Series aliases false */

/* polymorph Series banner false */

/* polymorph Series firstAired false */

/* polymorph Series genre false */

/* polymorph Series id false */

/* polymorph Series imdbId false */

/* polymorph Series lastUpdated false */

/* polymorph Series network false */

/* polymorph Series networkId false */

/* polymorph Series overview false */

/* polymorph Series rating false */

/* polymorph Series runtime false */

/* polymorph Series seriesId false */

/* polymorph Series seriesName false */

/* polymorph Series siteRating false */

/* polymorph Series siteRatingCount false */

/* polymorph Series status false */

/* polymorph Series zap2itId false */

// Validate validates this series
func (m *Series) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAliases(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGenre(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Series) validateAliases(formats strfmt.Registry) error {

	if swag.IsZero(m.Aliases) { // not required
		return nil
	}

	return nil
}

func (m *Series) validateGenre(formats strfmt.Registry) error {

	if swag.IsZero(m.Genre) { // not required
		return nil
	}

	return nil
}

var seriesTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Continuing","Ended"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		seriesTypeStatusPropEnum = append(seriesTypeStatusPropEnum, v)
	}
}

const (
	// SeriesStatusContinuing captures enum value "Continuing"
	SeriesStatusContinuing string = "Continuing"
	// SeriesStatusEnded captures enum value "Ended"
	SeriesStatusEnded string = "Ended"
)

// prop value enum
func (m *Series) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, seriesTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Series) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Series) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Series) UnmarshalBinary(b []byte) error {
	var res Series
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
